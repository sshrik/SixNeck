유전 알고리즘 
( http://blog.kim82536.pe.kr/260 참고 )
( http://m.blog.naver.com/dldbdgml99/220696781249 참고 )

자식 해 = 부모 해와 비슷한 형질의 유전자
이후 우월한 유전자들은 다시 자식해를 만들어 우수한 유전자를 널리 퍼뜨린다.

1. 유전자
- threshold + priority list 로 구성 되는 값.
- threshold 와 priority list 는 10000 이하의 양수 값

2. 세대 : 한 세대의 자식은 
- 생성과 소멸을 아우르는 하나의 주기.
- 생성 -> 번식 -> 소멸 의 주기를 가진다.
- 개체군의 크기는 대애애충.. 한 30개로 생각 해 보자.
N 개가 서로 싸우는 경우 = N ( N-1 )
30 개 = 870	한 판에 1초 걸리면 14.5분 동안 싸움
40 개 = 1560	한 판에 1초 걸리면 26분 동안 싸움

3. 적합도
- 유전자의 우월한 지수를 보여준다. ( 높을수록 우월함 )
- 승률로 따진다. ( 같은 세대가 n 개 있다면 n 명과 임의의 판 수만큼 싸워 승률로 나타냄. 대충 2000판 싸우면 될듯? 시간이 덜 걸린다면 한 세대에 1분~5분정도..? 시간 보고 판단 )


유전 알고리즘은 
1. 부모 유전자 선택
2. 번식
3. 돌연변이
로 이루어진다.

1. 부모 유전자 선택
부모로 선택 될 확률은 적합도에 비례.
번식 할 때, 부모의 유전자를 몇 개 뽑아서 계산 할 텐데, 그 때 뽑는 과정은 여러 가지가 있다.

- 룰렛 휠 : 전체 룰렛 구간을 100 이라고하고, 각 퍼센트만큼 차지하게 해서, 1 ~ 100 을 뽑아서 체크하는 방식.
참고로 C 언어의 rand() 함수 자체는 전체 크기가 크지 않고, 또한 진짜 random 의 의미를 가지지 못한다.

- 토너먼트 : 몇 개의 부모를 랜덤하게 뽑아서 그들 중 더 좋은 것을 가지고 선택한다.

2. 번식 : 교차라고도 한다.
- n 점 교차 : 교차 포인트를 정한 다음, 그 부분을 경계로 앞의 것은 부모 1, 뒤의 것은 부모 2를 정한다.

ex )
부모 : 
111|1111111|11111
000|0000000|00000
자식 : 
111|0000000|11111

3. 돌연변이 : 교차로 나온 값을 확률에 따라 변이시킴.
- 돌연변이가 일어날 확률은 적합도에 반비례하게 구현 가능.
- 우월함이 높을 수록 돌연변이 확률은 적어야 한다.

- Scramble Mutation : 임의의 두 지점 사이의 값들을 Suffle.
- Displacement Mutation : 임의의 두 지점 사이의 값들을 다른 곳으로 옮김.
- Insertion Mutation : 유전자 한 개의 위치를 옮김.
- Inversion Mutation : 유전자 두 개의 위치를 바꿈














